# Generated by Django 5.1.5 on 2025-04-04 10:10

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ("incentive", "0002_remove_incentivecalculator_ayia_and_more"),
        ("sws", "0046_districtblocklist_lineofactivity"),
        ("userprofile", "0012_delete_userknowyourclearance"),
    ]

    operations = [
        migrations.CreateModel(
            name="IncentiveCAF",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "status",
                    models.CharField(
                        default="In-Progress",
                        help_text="In-Progress, Completed, Deleted",
                        max_length=15,
                    ),
                ),
                (
                    "intention",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="incentive_intention_id",
                        to="sws.customerintentionproject",
                    ),
                ),
            ],
            options={
                "db_table": "incentive_caf_details",
            },
        ),
        migrations.CreateModel(
            name="InCAFProject",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "unit_name",
                    models.CharField(
                        default="", help_text="Company Name", max_length=255
                    ),
                ),
                (
                    "constitution_type_name",
                    models.CharField(
                        default="", help_text="Constitution Type Name", max_length=100
                    ),
                ),
                (
                    "intention_id",
                    models.CharField(
                        default="", help_text="Intention Id", max_length=50
                    ),
                ),
                (
                    "date_of_intention",
                    models.DateField(help_text="Date of filled Intention"),
                ),
                (
                    "district_name",
                    models.CharField(
                        default="", help_text="District names", max_length=50
                    ),
                ),
                (
                    "regional_office_name",
                    models.CharField(
                        default="", help_text="District names", max_length=50
                    ),
                ),
                (
                    "block_name",
                    models.CharField(
                        default="", help_text="Block names", max_length=75
                    ),
                ),
                (
                    "land_type",
                    models.CharField(default="", help_text="Land Type", max_length=75),
                ),
                (
                    "industrial_plot",
                    models.CharField(
                        blank=True,
                        default="",
                        help_text="industrial plot",
                        max_length=200,
                    ),
                ),
                ("address_of_unit", models.TextField(help_text="Address of Unit")),
                (
                    "activity_name",
                    models.CharField(
                        default="", help_text="activity name", max_length=50
                    ),
                ),
                (
                    "sector_name",
                    models.CharField(
                        default="", help_text="Sector name", max_length=200
                    ),
                ),
                (
                    "line_of_activity_name",
                    models.CharField(
                        default="", help_text="Line of Activity name", max_length=200
                    ),
                ),
                (
                    "contact_person_name",
                    models.CharField(
                        default="",
                        help_text="Name of authorised person",
                        max_length=200,
                    ),
                ),
                (
                    "contact_email",
                    models.EmailField(
                        default="",
                        help_text="Email of authorised person",
                        max_length=100,
                    ),
                ),
                (
                    "contact_mobile_no",
                    models.CharField(
                        default="",
                        help_text="Mobile number of authorised person",
                        max_length=16,
                    ),
                ),
                (
                    "contact_landline_no",
                    models.CharField(
                        blank=True,
                        default="",
                        help_text="Landline Number",
                        max_length=16,
                        null=True,
                    ),
                ),
                ("company_address", models.TextField(help_text="Address of company")),
                (
                    "company_address_pincode",
                    models.CharField(help_text="Pincode of company", max_length=6),
                ),
                (
                    "iem_a_number",
                    models.CharField(
                        default="", help_text="IEM Part A Number", max_length=100
                    ),
                ),
                ("iem_a_date", models.DateField(help_text="IEM Part A Date")),
                (
                    "iem_b_number",
                    models.CharField(
                        default="", help_text="IEM Part B Number", max_length=100
                    ),
                ),
                ("iem_b_date", models.DateField(help_text="IEM Part B Date")),
                (
                    "gstin",
                    models.CharField(default="", help_text="GST number", max_length=15),
                ),
                ("gstin_issue_date", models.DateField(help_text="GST issue date")),
                (
                    "comm_production_date",
                    models.DateField(help_text="Commercial Production Date"),
                ),
                (
                    "unit_type",
                    models.CharField(default="", help_text="unit_type", max_length=60),
                ),
                (
                    "total_investment_amount",
                    models.DecimalField(decimal_places=2, max_digits=10),
                ),
                (
                    "investment_in_plant_machinery",
                    models.DecimalField(decimal_places=2, max_digits=10),
                ),
                (
                    "activity",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="in_activity",
                        to="sws.activity",
                    ),
                ),
                (
                    "block",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="block_district",
                        to="sws.districtblocklist",
                    ),
                ),
                (
                    "constitution_type",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="org_type_id",
                        to="userprofile.organizationtype",
                    ),
                ),
                (
                    "district",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="in_district",
                        to="sws.district",
                    ),
                ),
                (
                    "industrial_area",
                    models.OneToOneField(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="in_industrial_area",
                        to="sws.industrialarealist",
                    ),
                ),
                (
                    "line_of_activity",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="in_line_of_activity",
                        to="sws.lineofactivity",
                    ),
                ),
                (
                    "regional_office",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="in_regional",
                        to="sws.regionaloffice",
                    ),
                ),
                (
                    "sector",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="in_sector",
                        to="sws.sector",
                    ),
                ),
                (
                    "caf",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="caf_project",
                        to="incentive.incentivecaf",
                    ),
                ),
            ],
            options={
                "db_table": "incentive_caf_project_details",
            },
        ),
        migrations.CreateModel(
            name="InCAFPower",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "connection_type",
                    models.CharField(
                        default="", help_text="New or Existing", max_length=10
                    ),
                ),
                (
                    "ht_contract_demand",
                    models.CharField(
                        default="", help_text="11KV, 33KV etc", max_length=15
                    ),
                ),
                (
                    "date_of_connection",
                    models.DateField(help_text="Date of connection"),
                ),
                (
                    "load_consumption",
                    models.IntegerField(
                        blank=True, help_text="Load consumption", null=True
                    ),
                ),
                (
                    "existing_load",
                    models.IntegerField(
                        blank=True, help_text="Existing Load consumption", null=True
                    ),
                ),
                (
                    "additional_load",
                    models.IntegerField(
                        blank=True, help_text="Additional Load consumption", null=True
                    ),
                ),
                (
                    "date_additional_load",
                    models.DateField(
                        blank=True, help_text="Additional Load Date", null=True
                    ),
                ),
                (
                    "caf",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="incaf_investment",
                        to="incentive.incentivecaf",
                    ),
                ),
            ],
            options={
                "db_table": "incentive_caf_power_details",
            },
        ),
        migrations.CreateModel(
            name="InCAFInvestment",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "comm_production_date",
                    models.DateField(help_text="Commercial Production Date"),
                ),
                ("period_from", models.DateField(help_text="Period From Date")),
                ("period_to", models.DateField(help_text="Period to Date")),
                (
                    "total_investment_amount",
                    models.DecimalField(decimal_places=2, max_digits=10),
                ),
                (
                    "investment_in_plant_machinery",
                    models.DecimalField(decimal_places=2, max_digits=10),
                ),
                (
                    "investment_in_building",
                    models.DecimalField(decimal_places=2, max_digits=10),
                ),
                (
                    "caf",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="caf_investment",
                        to="incentive.incentivecaf",
                    ),
                ),
            ],
            options={
                "db_table": "incentive_caf_investment_details",
            },
        ),
        migrations.DeleteModel(
            name="IncentiveCalculator",
        ),
    ]
